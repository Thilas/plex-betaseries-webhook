name: Build

on:
  pull_request:
    branches: [master]
  release:
    types: [published]

env:
  NODE_VERSION: 17.x
  SONAR_DIRECTORY: /github/workspace
  DH_IMAGE: thilas/plex-betaseries-webhook

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository }}
            ${{ github.event_name != 'pull_request' && env.DH_IMAGE || '' }}
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Bump version
        if: github.event_name != 'pull_request'
        env:
          VERSION: ${{ steps.meta.outputs.version }}
        run: |
          echo "Version: $VERSION"
          npm --no-git-tag-version version "$VERSION"

      - name: Create SonarCloud scanner default working directory
        run: |
          sudo mkdir --parents "$SONAR_DIRECTORY"
          sudo mount --bind "$GITHUB_WORKSPACE" "$SONAR_DIRECTORY"

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: npm ci

      - run: npm run build

      - run: npm test
        working-directory: ${{ env.SONAR_DIRECTORY }} # Align on SonarCloud scanner default working directory

      - name: SonarCloud scan
        continue-on-error: true # because scanning from forks is not supported for now
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        uses: SonarSource/sonarcloud-github-action@v1.4
        with:
          args: -Dsonar.projectVersion=${{ steps.meta.outputs.version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      #     CR_PAT: ${{ secrets.CR_PAT }} # Secret PAT with `read:packages` and `write:packages` scopes
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: thilas
          password: ${{ secrets.DH_PAT }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm/v7
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
