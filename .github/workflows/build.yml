name: Build

on:
  pull_request:
    branches: [master]
  release:
    types: [published]

env:
  NODE_VERSION: 14.x
  SONAR_DIRECTORY: /github/workspace
  CONTAINER_REGISTRY: docker.pkg.github.com
  DOCKERHUB_USER: thilas
  IMAGE_NAME: plex-betaseries-webhook

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Bump version
        if: ${{ !github.base_ref }}
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "$GITHUB_REF" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "$GITHUB_REF" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          echo "VERSION: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          npm --no-git-tag-version version "$VERSION"

      - name: Create SonarCloud scanner default working directory
        run: |
          sudo mkdir --parents "$SONAR_DIRECTORY"
          sudo mount --bind "$GITHUB_WORKSPACE" "$SONAR_DIRECTORY"

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: npm ci

      - run: npm run build

      - run: npm test
        working-directory: ${{ env.SONAR_DIRECTORY }} # Align on SonarCloud scanner default working directory

      - name: SonarCloud scan
        if: ${{ github.repository_owner == 'Thilas' }} # Unable to scan from forks for now
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        uses: SonarSource/sonarcloud-github-action@v1.4
        with:
          args: -Dsonar.projectVersion=${{ env.VERSION }}

      - name: Build image
        run: docker build --build-arg "BUILD_DATE=$(date --utc --rfc-3339=seconds)" --build-arg "VERSION=$VERSION" --tag "$IMAGE_NAME" .

      - name: Log into GitHub Container Registry
        if: ${{ !github.base_ref }}
        env:
          CR_PAT: ${{ secrets.CR_PAT }} # Secret PAT with `read:packages` and `write:packages` scopes
        run: echo "$CR_PAT" | docker login "$CONTAINER_REGISTRY" --username "$GITHUB_ACTOR" --password-stdin

      - name: Push image to GitHub Container Registry
        if: ${{ !github.base_ref }}
        run: |
          # Change all uppercase to lowercase
          IMAGE_ID="$(echo "$CONTAINER_REGISTRY/$GITHUB_REPOSITORY" | tr '[A-Z]' '[a-z]')/$IMAGE_NAME"
          docker tag "$IMAGE_NAME" "$IMAGE_ID:$VERSION"
          docker push "$IMAGE_ID:$VERSION"
          docker tag "$IMAGE_NAME" "$IMAGE_ID:latest"
          docker push "$IMAGE_ID:latest"

      - name: Log into Docker Hub
        if: ${{ !github.base_ref }}
        env:
          DH_PAT: ${{ secrets.DH_PAT }}
        run: echo "$DH_PAT" | docker login --username "$DOCKERHUB_USER" --password-stdin

      - name: Push image to Docker Hub
        if: ${{ !github.base_ref }}
        run: |
          IMAGE_ID="$DOCKERHUB_USER/$IMAGE_NAME"
          docker tag "$IMAGE_NAME" "$IMAGE_ID:$VERSION"
          docker push "$IMAGE_ID:$VERSION"
          docker tag "$IMAGE_NAME" "$IMAGE_ID:latest"
          docker push "$IMAGE_ID:latest"
